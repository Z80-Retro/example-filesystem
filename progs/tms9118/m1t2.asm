;****************************************************************************
;
;    VDP Graphics Mode 1 Test App
;
;    Copyright (C) 2021,2022 John Winans
;
;    This library is free software; you can redistribute it and/or
;    modify it under the terms of the GNU Lesser General Public
;    License as published by the Free Software Foundation; either
;    version 2.1 of the License, or (at your option) any later version.
;
;    This library is distributed in the hope that it will be useful,
;    but WITHOUT ANY WARRANTY; without even the implied warranty of
;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;    Lesser General Public License for more details.
;
;    You should have received a copy of the GNU Lesser General Public
;    License along with this library; if not, write to the Free Software
;    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301
;    USA
;
;
;****************************************************************************

; Graphics MODE1 test app based on example from the TI VDP Programmer's Guide - SPPU004

.vdp_vram:	equ	0x80	; VDP port for accessing the VRAM
.vdp_reg:	equ	0x81	; VDP port for accessing the registers

	org	0x100

	ld	sp,.stack

	;******************************************
	; Initialize the VDP into graphics mode 1
	;******************************************

	ld	hl,.mode1init
	ld	b,.mode1init_len
	ld	c,.vdp_reg
	otir				; write the config bytes


	;******************************************
	; Generate a pattern in the name table
	;******************************************
if 0
	ld	hl,.vraminit_name
	ld	bc,.vraminit_name_len
.name_pattern:
	ld	(hl),l
	inc	hl
	dec	bc
	ld	a,b
	or	c
	jp	nz,.name_pattern
endif

	;******************************************
	; Initialize the VRAM with useful patterns
	;******************************************

	ld	hl,.vraminit		; buffer-o-bytes to send
	ld	bc,.vraminit_len	; number of bytes to send
	ld	de,0x0000		; VDP sprite attribute table starts at 0x1000
	call	vdp_write_slow

	jp	0		; warm boot




;**********************************************************************
; Copy a given memory buffer into the VDP buffer.  
;
;
; The VDP can require up to 8usec per VRAM write in Graphics modes
; 1 and 2 when painting the active display area.
; (TMS9918 manual page 2-4)
;
; This runs slow enough to be used during active display.
;
; DE = VDP target memory address
; HL = host memory address
; BC = number of bytes to write
; Clobbers: AF, BC, DE, HL
;**********************************************************************
vdp_write_slow:
	; copy the new sprite location values into the VRAM
	; Set the VRAM write address
	ld	a,e
	out	(.vdp_reg),a		; VRAM address LSB to write
	ld	a,d
	or	0x40
	out	(.vdp_reg),a		; VRAM address MSB to write

	push	bc
	pop	de			; DE = byte count

	ld	c,.vdp_vram		; the I/O port number

.vdp_write_slow_loop:
	outi				; note: this clobbers B

	; Waste time between transfers (8.36 usec update rate @ 10 MHZ)
	push	hl
	pop	hl
	push	hl
	pop	hl

	; counter logic 
	dec	de
	ld	a,d
	or	e
	jr	nz,.vdp_write_slow_loop
	ret


;*********************************************************************
; initialization data for the VDP registers
;*********************************************************************

.mode1init:
	db	0x00,0x80	; R0 = graphics mode, no EXT video
	db	0xc0,0x81	; R1 = 16K RAM, enable display, disable INT, 8x8 sprites, mag off
	db	0x05,0x82	; R2 = name table = 0x1400
	db	0x80,0x83	; R3 = color table = 0x0200
	db	0x01,0x84	; R4 = pattern table = 0x0800
	db	0x20,0x85	; R5 = sprite attribute table = 0x1000
	db	0x00,0x86	; R6 = sprite pattern table = 0x0000
	db	0x1f,0x87	; R7 = bg color = white
.mode1init_len: equ	$-.mode1init	; number of bytes to write




;*********************************************************************
; initialization data that is sent to the VRAM
;*********************************************************************

	; padd the initializer table % 0x1000 to make debugging addresses easy
	ds	0x1000-(($+0x1000)&0x0fff)

.vraminit:
	; 0x0000-0x07ff sprite patterns
	ds      0x800,0xf0       		

.pat_start:
	; 0x0800-0x0fff pattern table 
	db	0x00,0x22,0x55,0x55,0x55,0x55,0x55,0x22		; 00
	db	0x00,0x22,0x52,0x52,0x52,0x52,0x52,0x22		; 01
	db	0x00,0x26,0x59,0x51,0x51,0x52,0x54,0x2f		; 02
	db	0x00,0x26,0x59,0x51,0x56,0x51,0x59,0x26		; 03
	db	0x00,0x21,0x59,0x59,0x59,0x5f,0x51,0x21		; 04
	db	0x00,0x2f,0x58,0x5e,0x53,0x51,0x51,0x2f		; 05
	db	0x00,0x26,0x58,0x58,0x5e,0x59,0x59,0x26		; 06
	db	0x00,0x2f,0x51,0x52,0x52,0x54,0x54,0x24		; 07
	db	0x00,0x26,0x59,0x59,0x56,0x59,0x59,0x26		; 08
	db	0x00,0x26,0x59,0x59,0x57,0x51,0x51,0x26		; 09
	db	0x00,0x26,0x59,0x59,0x5f,0x59,0x59,0x29		; 0A
	db	0x00,0x2e,0x59,0x59,0x5e,0x59,0x59,0x2e		; 0B
	db	0x00,0x27,0x58,0x58,0x58,0x58,0x58,0x27		; 0C
	db	0x00,0x2e,0x59,0x59,0x59,0x59,0x59,0x2e		; 0D
	db	0x00,0x2f,0x58,0x58,0x5e,0x58,0x58,0x2f		; 0E
	db	0x00,0x2f,0x58,0x58,0x5e,0x58,0x58,0x28		; 0F

	db	0x00,0x26,0x29,0x29,0x29,0x29,0x29,0x26		; 10
	db	0x00,0x22,0x22,0x22,0x22,0x22,0x22,0x22		; 11
	db	0x00,0x26,0x29,0x21,0x21,0x22,0x24,0x2f		; 12
	db	0x00,0x26,0x29,0x21,0x26,0x21,0x29,0x26		; 13
	db	0x00,0x21,0x29,0x29,0x29,0x2f,0x21,0x21		; 14
	db	0x00,0x2f,0x28,0x2e,0x23,0x21,0x21,0x2f		; 15
	db	0x00,0x26,0x28,0x28,0x2e,0x29,0x29,0x26		; 16
	db	0x00,0x2f,0x21,0x22,0x22,0x24,0x24,0x24		; 17
	db	0x00,0x26,0x29,0x29,0x26,0x29,0x29,0x26		; 18
	db	0x00,0x26,0x29,0x29,0x27,0x21,0x21,0x26		; 19
	db	0x00,0x26,0x29,0x29,0x2f,0x29,0x29,0x29		; 1A
	db	0x00,0x2e,0x29,0x29,0x2e,0x29,0x29,0x2e		; 1B
	db	0x00,0x27,0x28,0x28,0x28,0x28,0x28,0x27		; 1C
	db	0x00,0x2e,0x29,0x29,0x29,0x29,0x29,0x2e		; 1D
	db	0x00,0x2f,0x28,0x28,0x2e,0x28,0x28,0x2f		; 1E
	db	0x00,0x2f,0x28,0x28,0x2e,0x28,0x28,0x28		; 1F

	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; space
	db	0x00,0x08,0x08,0x08,0x08,0x08,0x00,0x08		; !
	db	0x00,0x14,0x14,0x14,0x00,0x00,0x00,0x00		; "
	db	0x00,0x14,0x7f,0x14,0x14,0x7f,0x14,0x00		; #
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; $
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; %
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; &
	db	0x00,0x04,0x04,0x04,0x00,0x00,0x00,0x00		; '
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; (
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; )
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; *
	db	0x00,0x08,0x08,0x7f,0x08,0x08,0x00,0x00		; +
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; ,
	db	0x00,0x00,0x00,0x7f,0x00,0x00,0x00,0x00		; -
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18		; .
	db	0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x40		; /

	db	0x00,0x3c,0x41,0x41,0x41,0x41,0x41,0x3c		; 0
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; 1
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; 2
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; 3
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; 4
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; 5
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; 6
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; 7
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; 8
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; 9
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; :
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; ;
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; <
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; =
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; >
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; ?

	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; @
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; A
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; B
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; C
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; D
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; E
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; F
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; G
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; H
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; I
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; J
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; K
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; L
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; M
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; N
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; O

	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; P
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; Q
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; R
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; S
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; T
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; U
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; V
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00		; W
	db	0x00,0x41,0x22,0x14,0x08,0x14,0x22,0x41		; X
	db	0x00,0x41,0x22,0x14,0x08,0x08,0x08,0x08		; Y
	db	0x00,0x7f,0x03,0x06,0x0c,0x18,0x30,0x7f		; Z
	db	0x00,0x7c,0x60,0x60,0x60,0x60,0x60,0x7c		; [
	db	0x00,0xc0,0x60,0x30,0x18,0x0c,0x06,0x03		; \
	db	0x00,0x1f,0x03,0x03,0x03,0x03,0x03,0x1f		; ]
	db	0x00,0x08,0x1c,0x36,0x63,0x00,0x00,0x00		; ^
	db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7f		; _

	db	0xf0,0xf0,0xf0,0xf0,0xf0,0xf0,0xf0,0xf0		; 0x60 a block on the left half

	ds	0x800-($-.pat_start),0x55	; 0x0800-0x0fff pattern table = 01010101  


	ds	0x080,0xd0	; 0x1000-0x107f sprite attributes
	ds	0x380,0x00	; 0x1080-0x13ff unused

.vraminit_name:
	;ds	0x400,0xff	; 0x1400-0x17ff name table (10101010)
	ds	0x400,0x60	; 0x1400-0x17ff name table (11110000)

.vraminit_name_len:	equ	768				; Note: not ALL names are used

	ds	0x800,0x00	; 0x1800-0x1fff unused

	; For the color table, just make all black & white for now
	db	0xf1,0xf1,0xf1,0xf1,0xf1,0xf1,0xf1,0xf1	; white on black
	db	0xf1,0xf1,0xf1,0xf1,0xf1,0xf1,0xf1,0xf1	; white on black
	db	0xf1,0xf1,0xf1,0xf1,0xf1,0xf1,0xf1,0xf1	; white on black
	db	0xf1,0xf1,0xf1,0xf1,0xf1,0xf1,0xf1,0xf1	; white on black
	db	0xf1,0xf1,0xf1,0xf1,0xf1,0xf1,0xf1,0xf1	; white on black

.vraminit_len:	equ	$-.vraminit

	ds	1024
.stack:	equ	$
