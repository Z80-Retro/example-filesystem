;****************************************************************************
;
;    VDP test app
;
;    Copyright (C) 2025 John Winans
;
;    This library is free software; you can redistribute it and/or
;    modify it under the terms of the GNU Lesser General Public
;    License as published by the Free Software Foundation; either
;    version 2.1 of the License, or (at your option) any later version.
;
;    This library is distributed in the hope that it will be useful,
;    but WITHOUT ANY WARRANTY; without even the implied warranty of
;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;    Lesser General Public License for more details.
;
;    You should have received a copy of the GNU Lesser General Public
;    License along with this library; if not, write to the Free Software
;    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301
;    USA
;
;****************************************************************************

; Enter text mode and draw animated characters on the screen

.il_reg:        equ     0x33    ; Interrupt Vector Low Register
.itc_reg:       equ     0x34    ; INT/TRAP Control Register

.vdp_vram:      equ     0x80    ; VDP port for accessing the VRAM
.vdp_reg:       equ     0x81    ; VDP port for accessing the registers

BDOS:           equ     5       ; CP/M entry
CONOUT:         equ     0x02    ; print character in E
CONRDY:         equ     0x0b    ; a = 0 if no char ready, else 0xff
PSTRING:        equ     0x09    ; print string string from DE will $ found

        org     0x100
        ld      sp,.stack_top

        di

        ;******************************************************************
        ; wait for vblank period
        in      a,(.vdp_reg)    ; discard any existing status
        call    .sync_frame

        ;******************************************************************
        ; init the VDP registers
        ld      hl,.reg_init
        ld      b,.reg_init_len
        ld      c,.vdp_reg
        otir

        ;******************************************************************
        ; put something recognizable into the VRAM
        ld      hl,.vram_raw
        ld      de,0
        ld      bc,.vram_raw_len
        call    .vdp_write

        ;******************************************************************
        ; scroll the screen up and down

.scroller:
        ld      hl,.vdp_name

.scroller_loop:
        ld      b,60                    ; wait for some frames to pass
.ss_loop:
        call    .sync_frame
        djnz    .ss_loop

        ld      de,.vdp_name+8*40       ; there are 8 unused lines of space in our name table config
        or      a                       ; clear the carry flag
        push    hl
        sbc     hl,de
        pop     hl
        jp      z,.scroller

        ld      de,40
        add     hl,de                   ; scroll down a line
        ld      de,0x0800               ; target VRAM name table address
        ld      bc,960                  ; actual number of viewable characters
        push    hl
        call    .vdp_write
        call    .kbhit
        pop     hl
        jr      z,.scroller_loop

        jp      0


        ;******************************************************************
        ; Return with z flag unset if a key has been pressed.
.kbhit:
        ld      c,CONRDY
        call    BDOS
        or      a
        ret


        ;******************************************************************
        ; wait until vsync
.sync_frame:
        in      a,(.vdp_reg)
        and     0x80
        jr      z,.sync_frame
        ret


        ;********************************************************
        ; copy from RAM to VRAM
        ; HL = RAM address
        ; DE = VRAM address
        ; BC = number of bytes to copy
.vdp_write:
        in      a,(.vdp_reg)                    ; read the status register to reset the reg fsm
        ld      a,e
        out     (.vdp_reg),a                    ; VRAM address LSB
        ld      a,d
        or      0x40                            ; VRAM MSB (with 01 in msbs)
        out     (.vdp_reg),a                    ; VRAM address MSB

        ld      d,b
        ld      e,c
        ld      c,.vdp_vram

        ld      a,d
        or      a
        jr      z,.wr_resid
        ld      b,0             ; 256 bytes
.wr_256:
        otir
        dec     d
        jr      nz,.wr_256

.wr_resid:
        ; is there any residual ?
        ld      a,e
        or      a
        ret     z               ; no? then we are done

        ld      b,e
        otir
        ret



; This an ASCII 5x7 font that I just typed in off my head whilst visualizing the letters.
.vram_raw:
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;00    NUL '\0' (null character)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;01    SOH (start of heading)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;02    STX (start of text)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;03    ETX (end of text)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;04    EOT (end of transmission)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;05    ENQ (enquiry)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;06    ACK (acknowledge)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;07    BEL '\a' (bell)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;08    BS  '\b' (backspace)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;09    HT  '\t' (horizontal tab)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;0A    LF  '\n' (new line)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;0B    VT  '\v' (vertical tab)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;0C    FF  '\f' (form feed)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;0D    CR  '\r' (carriage ret)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;0E    SO  (shift out)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;0F    SI  (shift in)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;10    DLE (data link escape)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;11    DC1 (device control 1)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;12    DC2 (device control 2)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;13    DC3 (device control 3)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;14    DC4 (device control 4)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;15    NAK (negative ack.)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;16    SYN (synchronous idle)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;17    ETB (end of trans. blk)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;18    CAN (cancel)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;19    EM  (end of medium)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;1A    SUB (substitute)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;1B    ESC (escape)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;1C    FS  (file separator)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;1D    GS  (group separator)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;1E    RS  (record separator)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;1F    US  (unit separator)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;20    SPACE
        db      0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x10, 0x00          ;21    !
        db      0x28, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;22    "
        db      0x50, 0x50, 0xf8, 0x50, 0xf8, 0x50, 0x50, 0x00          ;23    #
        db      0x10, 0x38, 0x40, 0x30, 0x08, 0x70, 0x10, 0x00          ;24    $
        db      0xc8, 0xc8, 0x10, 0x20, 0x40, 0x98, 0x98, 0x00          ;25    %
        db      0x40, 0xa0, 0xa0, 0x40, 0xa8, 0x90, 0x68, 0x00          ;26    &
        db      0x10, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;27    '
        db      0x20, 0x40, 0x80, 0x80, 0x80, 0x40, 0x20, 0x00          ;28    (
        db      0x20, 0x10, 0x08, 0x08, 0x08, 0x10, 0x20, 0x00          ;29    )
        db      0x00, 0x20, 0xa8, 0x70, 0xa8, 0x20, 0x00, 0x00          ;2A    *
        db      0x00, 0x20, 0x20, 0xf8, 0x20, 0x20, 0x00, 0x00          ;2B    +
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x40          ;2C    ,
        db      0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00          ;2D    -
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x00          ;2E    .
        db      0x10, 0x10, 0x20, 0x20, 0x20, 0x40, 0x40, 0x00          ;2F    /
        db      0x70, 0x88, 0x88, 0xa8, 0x88, 0x88, 0x70, 0x00          ;30    0
        db      0x20, 0x60, 0x20, 0x20, 0x20, 0x20, 0xf8, 0x00          ;31    1
        db      0x70, 0x88, 0x08, 0x30, 0x40, 0x80, 0xf8, 0x00          ;32    2
        db      0x70, 0x88, 0x08, 0x30, 0x08, 0x88, 0x70, 0x00          ;33    3
        db      0x10, 0x30, 0x50, 0x90, 0xf8, 0x10, 0x10, 0x00          ;34    4
        db      0xf8, 0x80, 0xb0, 0xc8, 0x08, 0x88, 0x70, 0x00          ;35    5
        db      0x30, 0x40, 0x80, 0xf0, 0x88, 0x88, 0x70, 0x00          ;36    6
        db      0xf8, 0x08, 0x10, 0x20, 0x40, 0x80, 0x80, 0x00          ;37    7
        db      0x70, 0x88, 0x88, 0x70, 0x88, 0x88, 0x70, 0x00          ;38    8
        db      0x70, 0x88, 0x88, 0x70, 0x08, 0x88, 0x70, 0x00          ;39    9
        db      0x00, 0x00, 0x20, 0x00, 0x00, 0x20, 0x00, 0x00          ;3A    :
        db      0x00, 0x00, 0x20, 0x00, 0x00, 0x20, 0x20, 0x40          ;3B    ;
        db      0x10, 0x20, 0x40, 0x80, 0x40, 0x20, 0x10, 0x00          ;3C    <
        db      0x00, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0x00, 0x00          ;3D    =
        db      0x40, 0x20, 0x10, 0x08, 0x10, 0x20, 0x40, 0x00          ;3E    >
        db      0x70, 0x88, 0x08, 0x10, 0x20, 0x00, 0x20, 0x00          ;3F    ?
        db      0x30, 0x48, 0x98, 0xa8, 0x98, 0x40, 0x30, 0x00          ;40    @
        db      0x20, 0x50, 0x88, 0xf8, 0x88, 0x88, 0x88, 0x00          ;41    A
        db      0xf0, 0x88, 0x88, 0xf0, 0x88, 0x88, 0xf0, 0x00          ;42    B
        db      0x70, 0x88, 0x80, 0x80, 0x80, 0x88, 0x70, 0x00          ;43    C
        db      0xf0, 0x88, 0x88, 0x88, 0x88, 0x88, 0xf0, 0x00          ;44    D
        db      0xf8, 0x80, 0x80, 0xf0, 0x80, 0x80, 0xf8, 0x00          ;45    E
        db      0xf8, 0x80, 0x80, 0xf0, 0x80, 0x80, 0x80, 0x00          ;46    F
        db      0x70, 0x88, 0x80, 0x80, 0x98, 0x88, 0x70, 0x00          ;47    G
        db      0x88, 0x88, 0x88, 0xf8, 0x88, 0x88, 0x88, 0x00          ;48    H
        db      0x70, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x00          ;49    I
        db      0x08, 0x08, 0x08, 0x08, 0x88, 0x88, 0x70, 0x00          ;50    J
        db      0x88, 0x90, 0xa0, 0xc0, 0xa0, 0x90, 0x88, 0x00          ;4B    K
        db      0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xf8, 0x00          ;4C    L
        db      0x88, 0xd8, 0xa8, 0xa8, 0x88, 0x88, 0x88, 0x00          ;4D    M
        db      0x88, 0xc8, 0xa8, 0x98, 0x88, 0x88, 0x88, 0x00          ;4E    N
        db      0x70, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00          ;4F    O
        db      0xf0, 0x88, 0x88, 0xf0, 0x80, 0x80, 0x80, 0x00          ;50    P
        db      0x70, 0x88, 0x88, 0x88, 0xa8, 0x90, 0x68, 0x00          ;51    Q
        db      0xf0, 0x88, 0x88, 0xf0, 0xa0, 0x90, 0x88, 0x00          ;52    R
        db      0x70, 0x88, 0x80, 0x70, 0x08, 0x88, 0x70, 0x00          ;53    S
        db      0xf8, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00          ;54    T
        db      0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00          ;55    U
        db      0x88, 0x88, 0x88, 0x88, 0x88, 0x50, 0x20, 0x00          ;56    V
        db      0x88, 0x88, 0x88, 0x88, 0xa8, 0xa8, 0x50, 0x00          ;57    W
        db      0x88, 0x88, 0x50, 0x20, 0x50, 0x88, 0x88, 0x00          ;58    X
        db      0x88, 0x88, 0x50, 0x20, 0x20, 0x20, 0x20, 0x00          ;59    Y
        db      0xf8, 0x08, 0x10, 0x20, 0x40, 0x80, 0xf8, 0x00          ;5A    Z
        db      0x70, 0x40, 0x40, 0x40, 0x40, 0x40, 0x70, 0x00          ;5B    [
        db      0x40, 0x40, 0x20, 0x20, 0x20, 0x10, 0x10, 0x00          ;5C    \  '\\'
        db      0x70, 0x10, 0x10, 0x10, 0x10, 0x10, 0x70, 0x00          ;5D    ]
        db      0x20, 0x50, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00          ;5E    ^
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8          ;5F    _
        db      0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00          ;60    `
        db      0x00, 0x00, 0x70, 0x08, 0x78, 0x88, 0x78, 0x00          ;61    a
        db      0x80, 0x80, 0xb0, 0xc8, 0x88, 0x88, 0xf0, 0x00          ;62    b
        db      0x00, 0x00, 0x78, 0x80, 0x80, 0x80, 0x78, 0x00          ;63    c
        db      0x08, 0x08, 0x68, 0x98, 0x88, 0x88, 0x78, 0x00          ;64    d
        db      0x00, 0x00, 0x70, 0x88, 0xf8, 0x80, 0x78, 0x00          ;65    e
        db      0x18, 0x20, 0x70, 0x20, 0x20, 0x20, 0x20, 0x00          ;66    f
        db      0x00, 0x00, 0x70, 0x88, 0x88, 0x78, 0x08, 0x70          ;67    g
        db      0x80, 0x80, 0xb0, 0xc8, 0x88, 0x88, 0x88, 0x00          ;68    h
        db      0x20, 0x00, 0x60, 0x20, 0x20, 0x20, 0x70, 0x00          ;69    i
        db      0x10, 0x00, 0x30, 0x10, 0x10, 0x10, 0x90, 0x60          ;6A    j
        db      0x80, 0x80, 0x90, 0xa0, 0xc0, 0xa0, 0x90, 0x00          ;6B    k
        db      0x40, 0x20, 0x20, 0x20, 0x20, 0x20, 0x10, 0x00          ;6C    l
        db      0x00, 0x00, 0xf0, 0xa8, 0xa8, 0xa8, 0xa8, 0x00          ;6D    m
        db      0x00, 0x00, 0xb0, 0xc8, 0x88, 0x88, 0x88, 0x00          ;6E    n
        db      0x00, 0x00, 0x70, 0x88, 0x88, 0x88, 0x70, 0x00          ;6F    o
        db      0x00, 0x00, 0xb0, 0xc8, 0x88, 0xc8, 0xb0, 0x80          ;70    p
        db      0x00, 0x00, 0x68, 0x98, 0x88, 0x98, 0x68, 0x08          ;71    q
        db      0x00, 0x00, 0xb0, 0xc8, 0x80, 0x80, 0x80, 0x00          ;72    r
        db      0x00, 0x00, 0x78, 0x80, 0x70, 0x08, 0xf0, 0x00          ;73    s
        db      0x40, 0x40, 0xe0, 0x40, 0x40, 0x40, 0x30, 0x00          ;74    t
        db      0x00, 0x00, 0x88, 0x88, 0x88, 0x98, 0x68, 0x00          ;75    u
        db      0x00, 0x00, 0x88, 0x88, 0x88, 0x50, 0x20, 0x00          ;76    v
        db      0x00, 0x00, 0x88, 0x88, 0x88, 0xa8, 0x50, 0x00          ;77    w
        db      0x00, 0x00, 0x88, 0x50, 0x20, 0x50, 0x88, 0x00          ;78    x
        db      0x00, 0x00, 0x88, 0x88, 0x98, 0x68, 0x08, 0x70          ;79    y
        db      0x00, 0x00, 0xf8, 0x10, 0x20, 0x40, 0xf8, 0x00          ;7A    z
        db      0x10, 0x20, 0x20, 0x40, 0x20, 0x20, 0x10, 0x00          ;7B    {
        db      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00          ;7C    |
        db      0x40, 0x20, 0x20, 0x10, 0x20, 0x20, 0x40, 0x00          ;7D    }
        db      0x00, 0x00, 0x48, 0xa8, 0x90, 0x00, 0x00, 0x00          ;7E    ~
        db      0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55          ;7F    DEL

        ; the second half of the font is just underlined to make it easy to paste & hack
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;00    NUL '\0' (null character)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;01    SOH (start of heading)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;02    STX (start of text)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;03    ETX (end of text)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;04    EOT (end of transmission)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;05    ENQ (enquiry)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;06    ACK (acknowledge)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;07    BEL '\a' (bell)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;08    BS  '\b' (backspace)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;09    HT  '\t' (horizontal tab)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;0A    LF  '\n' (new line)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;0B    VT  '\v' (vertical tab)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;0C    FF  '\f' (form feed)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;0D    CR  '\r' (carriage ret)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;0E    SO  (shift out)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;0F    SI  (shift in)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;10    DLE (data link escape)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;11    DC1 (device control 1)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;12    DC2 (device control 2)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;13    DC3 (device control 3)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;14    DC4 (device control 4)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;15    NAK (negative ack.)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;16    SYN (synchronous idle)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;17    ETB (end of trans. blk)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;18    CAN (cancel)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;19    EM  (end of medium)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;1A    SUB (substitute)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;1B    ESC (escape)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;1C    FS  (file separator)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;1D    GS  (group separator)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;1E    RS  (record separator)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;1F    US  (unit separator)
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;20    SPACE
        db      0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x10, 0xff          ;21    !
        db      0x28, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;22    "
        db      0x50, 0x50, 0xf8, 0x50, 0xf8, 0x50, 0x50, 0xff          ;23    #
        db      0x10, 0x38, 0x40, 0x30, 0x08, 0x70, 0x10, 0xff          ;24    $
        db      0xc8, 0xc8, 0x10, 0x20, 0x40, 0x98, 0x98, 0xff          ;25    %
        db      0x40, 0xa0, 0xa0, 0x40, 0xa8, 0x90, 0x68, 0xff          ;26    &
        db      0x10, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;27    '
        db      0x20, 0x40, 0x80, 0x80, 0x80, 0x40, 0x20, 0xff          ;28    (
        db      0x20, 0x10, 0x08, 0x08, 0x08, 0x10, 0x20, 0xff          ;29    )
        db      0x00, 0x20, 0xa8, 0x70, 0xa8, 0x20, 0x00, 0xff          ;2A    *
        db      0x00, 0x20, 0x20, 0xf8, 0x20, 0x20, 0x00, 0xff          ;2B    +
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xff          ;2C    ,
        db      0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0xff          ;2D    -
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0xff          ;2E    .
        db      0x10, 0x10, 0x20, 0x20, 0x20, 0x40, 0x40, 0xff          ;2F    /
        db      0x70, 0x88, 0x88, 0xa8, 0x88, 0x88, 0x70, 0xff          ;30    0
        db      0x20, 0x60, 0x20, 0x20, 0x20, 0x20, 0xf8, 0xff          ;31    1
        db      0x70, 0x88, 0x08, 0x30, 0x40, 0x80, 0xf8, 0xff          ;32    2
        db      0x70, 0x88, 0x08, 0x30, 0x08, 0x88, 0x70, 0xff          ;33    3
        db      0x10, 0x30, 0x50, 0x90, 0xf8, 0x10, 0x10, 0xff          ;34    4
        db      0xf8, 0x80, 0xb0, 0xc8, 0x08, 0x88, 0x70, 0xff          ;35    5
        db      0x30, 0x40, 0x80, 0xf0, 0x88, 0x88, 0x70, 0xff          ;36    6
        db      0xf8, 0x08, 0x10, 0x20, 0x40, 0x80, 0x80, 0xff          ;37    7
        db      0x70, 0x88, 0x88, 0x70, 0x88, 0x88, 0x70, 0xff          ;38    8
        db      0x70, 0x88, 0x88, 0x70, 0x08, 0x88, 0x70, 0xff          ;39    9
        db      0x00, 0x00, 0x20, 0x00, 0x00, 0x20, 0x00, 0xff          ;3A    :
        db      0x00, 0x00, 0x20, 0x00, 0x00, 0x20, 0x20, 0xff          ;3B    ;
        db      0x10, 0x20, 0x40, 0x80, 0x40, 0x20, 0x10, 0xff          ;3C    <
        db      0x00, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0x00, 0xff          ;3D    =
        db      0x40, 0x20, 0x10, 0x08, 0x10, 0x20, 0x40, 0xff          ;3E    >
        db      0x70, 0x88, 0x08, 0x10, 0x20, 0x00, 0x20, 0xff          ;3F    ?
        db      0x30, 0x48, 0x98, 0xa8, 0x98, 0x40, 0x30, 0xff          ;40    @
        db      0x20, 0x50, 0x88, 0xf8, 0x88, 0x88, 0x88, 0xff          ;41    A
        db      0xf0, 0x88, 0x88, 0xf0, 0x88, 0x88, 0xf0, 0xff          ;42    B
        db      0x70, 0x88, 0x80, 0x80, 0x80, 0x88, 0x70, 0xff          ;43    C
        db      0xf0, 0x88, 0x88, 0x88, 0x88, 0x88, 0xf0, 0xff          ;44    D
        db      0xf8, 0x80, 0x80, 0xf0, 0x80, 0x80, 0xf8, 0xff          ;45    E
        db      0xf8, 0x80, 0x80, 0xf0, 0x80, 0x80, 0x80, 0xff          ;46    F
        db      0x70, 0x88, 0x80, 0x80, 0x98, 0x88, 0x70, 0xff          ;47    G
        db      0x88, 0x88, 0x88, 0xf8, 0x88, 0x88, 0x88, 0xff          ;48    H
        db      0x70, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0xff          ;49    I
        db      0x08, 0x08, 0x08, 0x08, 0x88, 0x88, 0x70, 0xff          ;50    J
        db      0x88, 0x90, 0xa0, 0xc0, 0xa0, 0x90, 0x88, 0xff          ;4B    K
        db      0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xf8, 0xff          ;4C    L
        db      0x88, 0xd8, 0xa8, 0xa8, 0x88, 0x88, 0x88, 0xff          ;4D    M
        db      0x88, 0xc8, 0xa8, 0x98, 0x88, 0x88, 0x88, 0xff          ;4E    N
        db      0x70, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0xff          ;4F    O
        db      0xf0, 0x88, 0x88, 0xf0, 0x80, 0x80, 0x80, 0xff          ;50    P
        db      0x70, 0x88, 0x88, 0x88, 0xa8, 0x90, 0x68, 0xff          ;51    Q
        db      0xf0, 0x88, 0x88, 0xf0, 0xa0, 0x90, 0x88, 0xff          ;52    R
        db      0x70, 0x88, 0x80, 0x70, 0x08, 0x88, 0x70, 0xff          ;53    S
        db      0xf8, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xff          ;54    T
        db      0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0xff          ;55    U
        db      0x88, 0x88, 0x88, 0x88, 0x88, 0x50, 0x20, 0xff          ;56    V
        db      0x88, 0x88, 0x88, 0x88, 0xa8, 0xa8, 0x50, 0xff          ;57    W
        db      0x88, 0x88, 0x50, 0x20, 0x50, 0x88, 0x88, 0xff          ;58    X
        db      0x88, 0x88, 0x50, 0x20, 0x20, 0x20, 0x20, 0xff          ;59    Y
        db      0xf8, 0x08, 0x10, 0x20, 0x40, 0x80, 0xf8, 0xff          ;5A    Z
        db      0x70, 0x40, 0x40, 0x40, 0x40, 0x40, 0x70, 0xff          ;5B    [
        db      0x40, 0x40, 0x20, 0x20, 0x20, 0x10, 0x10, 0xff          ;5C    \  '\\'
        db      0x70, 0x10, 0x10, 0x10, 0x10, 0x10, 0x70, 0xff          ;5D    ]
        db      0x20, 0x50, 0x88, 0x00, 0x00, 0x00, 0x00, 0xff          ;5E    ^
        db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;5F    _
        db      0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff          ;60    `
        db      0x00, 0x00, 0x70, 0x08, 0x78, 0x88, 0x78, 0xff          ;61    a
        db      0x80, 0x80, 0xb0, 0xc8, 0x88, 0x88, 0xf0, 0xff          ;62    b
        db      0x00, 0x00, 0x78, 0x80, 0x80, 0x80, 0x78, 0xff          ;63    c
        db      0x08, 0x08, 0x68, 0x98, 0x88, 0x88, 0x78, 0xff          ;64    d
        db      0x00, 0x00, 0x70, 0x88, 0xf8, 0x80, 0x78, 0xff          ;65    e
        db      0x18, 0x20, 0x70, 0x20, 0x20, 0x20, 0x20, 0xff          ;66    f
        db      0x00, 0x00, 0x70, 0x88, 0x88, 0x78, 0x08, 0xff          ;67    g
        db      0x80, 0x80, 0xb0, 0xc8, 0x88, 0x88, 0x88, 0xff          ;68    h
        db      0x20, 0x00, 0x60, 0x20, 0x20, 0x20, 0x70, 0xff          ;69    i
        db      0x10, 0x00, 0x30, 0x10, 0x10, 0x10, 0x90, 0xff          ;6A    j
        db      0x80, 0x80, 0x90, 0xa0, 0xc0, 0xa0, 0x90, 0xff          ;6B    k
        db      0x40, 0x20, 0x20, 0x20, 0x20, 0x20, 0x10, 0xff          ;6C    l
        db      0x00, 0x00, 0xf0, 0xa8, 0xa8, 0xa8, 0xa8, 0xff          ;6D    m
        db      0x00, 0x00, 0xb0, 0xc8, 0x88, 0x88, 0x88, 0xff          ;6E    n
        db      0x00, 0x00, 0x70, 0x88, 0x88, 0x88, 0x70, 0xff          ;6F    o
        db      0x00, 0x00, 0xb0, 0xc8, 0x88, 0xc8, 0xb0, 0xff          ;70    p
        db      0x00, 0x00, 0x68, 0x98, 0x88, 0x98, 0x68, 0xff          ;71    q
        db      0x00, 0x00, 0xb0, 0xc8, 0x80, 0x80, 0x80, 0xff          ;72    r
        db      0x00, 0x00, 0x78, 0x80, 0x70, 0x08, 0xf0, 0xff          ;73    s
        db      0x40, 0x40, 0xe0, 0x40, 0x40, 0x40, 0x30, 0xff          ;74    t
        db      0x00, 0x00, 0x88, 0x88, 0x88, 0x98, 0x68, 0xff          ;75    u
        db      0x00, 0x00, 0x88, 0x88, 0x88, 0x50, 0x20, 0xff          ;76    v
        db      0x00, 0x00, 0x88, 0x88, 0x88, 0xa8, 0x50, 0xff          ;77    w
        db      0x00, 0x00, 0x88, 0x50, 0x20, 0x50, 0x88, 0xff          ;78    x
        db      0x00, 0x00, 0x88, 0x88, 0x98, 0x68, 0x08, 0xff          ;79    y
        db      0x00, 0x00, 0xf8, 0x10, 0x20, 0x40, 0xf8, 0xff          ;7A    z
        db      0x10, 0x20, 0x20, 0x40, 0x20, 0x20, 0x10, 0xff          ;7B    {
        db      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xff          ;7C    |
        db      0x40, 0x20, 0x20, 0x10, 0x20, 0x20, 0x40, 0xff          ;7D    }
        db      0x00, 0x00, 0x48, 0xa8, 0x90, 0x00, 0x00, 0xff          ;7E    ~
        db      0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0xff          ;7F    DEL


        ; This should be enough bytes to fill the screen for testing
.vdp_name:
        db      0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f
        db      " !\"#$%&'()*+,-./0123456789:;<=>?"
        db      "@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_"
        db      "`abcdefghijklmnopqrstuvwxyz{|}~'"
        db      0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f
        db      " !\"#$%&'()*+,-./0123456789:;<=>?"
        db      "@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_"
        db      "`abcdefghijklmnopqrstuvwxyz{|}~'"
        db      0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f
        db      " !\"#$%&'()*+,-./0123456789:;<=>?"
        db      "@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_"
        db      "`abcdefghijklmnopqrstuvwxyz{|}~'"

        db      "THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG"
        db      "the quick brown fox jumps over the lazy dog"

        db      0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f
        db      0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f
        db      0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf
        db      0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf
        db      0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf
        db      0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf
        db      0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef
        db      0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff
        db      0x7f, 0x7f              ; round to multiple of 40

        db      "                                        "
        db      "  . . . . . . John was here! . . . . .  "
        db      "                                        "
        db      "                                        "
        db      " !\"#$%&'()*+,-./0123456789:;<=>?        "     ; note escape
        db      "                                        "
        db      "@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_        "     ; note escape

        db      "`abcdefghijklmnopqrstuvwxyz{|}~", 0x7f
        db      "        "

        db      "                                        "
        db      "                                        "
        db      "                                        "
        db      "                                        "
        db      "                                        "
        db      "                                        "
        db      "                                        "
        db      "                                        "
        db      "                                        "
        db      "                                        "
        db      "                                        "


.vram_raw_len:      equ     $-.vram_raw


        ; VDP register init values
.reg_init:
        db      0x00,0x80       ; text mode
        db      0x50,0x81       ; text mode, enable screen
        db      0x02,0x82       ; name table 0x0800 - 0x0bff
        db      0x30,0x83       ; color table 0x0c00 - 0x0c20    (not used)
        db      0x00,0x84       ; pattern table 0x0000 - 0x07ff
        db      0xff,0x85       ; sprite attribute table 0x3f80 - 0x3fff (not used)
        db      0xff,0x86       ; sprite pattern table 0x3800 - 0x3fff (not used)
        db      0x31,0x87       ; fg/bg colors
.reg_init_len:   equ    $-.reg_init

        org     $+0x200
.stack_top:

